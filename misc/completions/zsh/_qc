#compdef qc
# vim: ft=zsh

_qc () {
    local -a _1st_arguments
    _1st_arguments=(
    'configure:Edit config file'
    'exec:Run the selected commands'
    'help:Help about any command'
    'search:Search snippets'
    'version:Print the version number'
    )

    _arguments \
        '(--help)--help[show this help message]' \
        '(--config)--config=[config file (default is $HOME/.config/qc/config.toml)]' \
        '(--debug)--debug[debug mode]' \
        '*:: :->subcmds' \
        && return 0

    if (( CURRENT == 1 )); then
        _describe -t commands "qc subcommand" _1st_arguments
        return
    fi

    case "$words[1]" in
        ("configure"|"version")
            _arguments \
                '(- :)'{-h,--help}'[Show this help and exit]' \
                && return 0
            ;;
        ("exec")
            _arguments \
                '(- :)'{-h,--help}'[Show this help and exit]' \
                '(--color)--color[Enable colorized output (only fzf)]' \
                '(-q --query)'{-q,--query}'=[Initial value for query]' \
                && return 0
            ;;
        ("search")
            _arguments \
                '(- :)'{-h,--help}'[Show this help and exit]' \
                '(--color)--color[Enable colorized output (only fzf)]' \
                '(-d --delimiter)'{-d,--delimiter}'[Use delim as the command delimiter character (default "; ")]' \
                '(-q --query)'{-q,--query}'=[Initial value for query]' \
                && return 0
            ;;
        ("help")
            _values 'help message' ${_1st_arguments[@]%:*} && return 0
            ;;
    esac
}

_qc "$@"
